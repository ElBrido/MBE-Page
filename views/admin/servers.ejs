<div class="admin-container">
    <div class="admin-header">
        <h1><i class="fas fa-server"></i> Server Management</h1>
        <p>Manage all servers across the platform.</p>
    </div>

    <div class="admin-section">
        <div class="table-responsive">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>User</th>
                        <th>Server Name</th>
                        <th>Location</th>
                        <th>Resources</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (servers.length === 0) { %>
                        <tr>
                            <td colspan="8" class="no-data">No servers found</td>
                        </tr>
                    <% } else { %>
                        <% servers.forEach(server => { %>
                            <tr>
                                <td>#<%= server.id %></td>
                                <td><%= server.first_name %> <%= server.last_name %><br><small><%= server.email %></small></td>
                                <td><%= server.server_name %></td>
                                <td><%= server.node_location %></td>
                                <td>
                                    CPU: <%= server.cpu %><br>
                                    RAM: <%= server.ram %>MB<br>
                                    Disk: <%= server.disk %>GB
                                </td>
                                <td>
                                    <select class="form-control status-select" data-server-id="<%= server.id %>" style="padding: 0.25rem; font-size: 0.9rem;">
                                        <option value="creating" <%= server.status === 'creating' ? 'selected' : '' %>>Creating</option>
                                        <option value="active" <%= server.status === 'active' ? 'selected' : '' %>>Active</option>
                                        <option value="suspended" <%= server.status === 'suspended' ? 'selected' : '' %>>Suspended</option>
                                        <option value="failed" <%= server.status === 'failed' ? 'selected' : '' %>>Failed</option>
                                        <option value="pending_setup" <%= server.status === 'pending_setup' ? 'selected' : '' %>>Pending Setup</option>
                                    </select>
                                </td>
                                <td><%= new Date(server.created_at).toLocaleDateString() %></td>
                                <td>
                                    <button class="btn-admin btn-admin-danger" onclick="deleteServer(<%= server.id %>)" style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<link rel="stylesheet" href="/css/admin.css">
<script>
// Handle status changes
document.querySelectorAll('.status-select').forEach(select => {
    select.addEventListener('change', async function() {
        const serverId = this.dataset.serverId;
        const status = this.value;
        
        try {
            const response = await fetch(`/admin/servers/${serverId}/status`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status })
            });
            
            const data = await response.json();
            if (data.success) {
                alert('Status updated successfully');
            } else {
                alert('Error updating status: ' + data.error);
                location.reload();
            }
        } catch (err) {
            alert('Error updating status: ' + err.message);
            location.reload();
        }
    });
});

async function deleteServer(id) {
    if (!confirm('Are you sure you want to delete this server? This action cannot be undone.')) {
        return;
    }
    
    try {
        const response = await fetch(`/admin/servers/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });
        
        const result = await response.json();
        if (result.success) {
            alert('Server deleted successfully');
            location.reload();
        } else {
            alert('Error deleting server: ' + result.error);
        }
    } catch (err) {
        alert('Error deleting server: ' + err.message);
    }
}
</script>
