<div class="admin-container">
    <div class="admin-header">
        <h1><i class="fas fa-bullhorn"></i> Announcement Management</h1>
        <p>Create and manage site-wide announcements.</p>
        <button class="btn-admin btn-admin-primary" onclick="openAnnouncementModal()">
            <i class="fas fa-plus"></i> Create Announcement
        </button>
    </div>

    <div class="admin-section">
        <div class="table-responsive">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Type</th>
                        <th>Content</th>
                        <th>Period</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (announcements.length === 0) { %>
                        <tr>
                            <td colspan="7" class="no-data">No announcements found</td>
                        </tr>
                    <% } else { %>
                        <% announcements.forEach(ann => { %>
                            <tr>
                                <td>#<%= ann.id %></td>
                                <td><strong><%= ann.title %></strong></td>
                                <td><span class="status-badge <%= ann.type %>"><%= ann.type %></span></td>
                                <td><%= ann.content.substring(0, 100) %><%= ann.content.length > 100 ? '...' : '' %></td>
                                <td>
                                    <% if (ann.start_date && ann.end_date) { %>
                                        <%= new Date(ann.start_date).toLocaleDateString() %> - <%= new Date(ann.end_date).toLocaleDateString() %>
                                    <% } else if (ann.start_date) { %>
                                        From <%= new Date(ann.start_date).toLocaleDateString() %>
                                    <% } else if (ann.end_date) { %>
                                        Until <%= new Date(ann.end_date).toLocaleDateString() %>
                                    <% } else { %>
                                        Permanent
                                    <% } %>
                                </td>
                                <td>
                                    <% if (ann.is_active) { %>
                                        <span class="status-badge active">Active</span>
                                    <% } else { %>
                                        <span class="status-badge inactive">Inactive</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn-admin btn-admin-secondary" onclick='editAnnouncement(<%= JSON.stringify(ann) %>)' style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                            Edit
                                        </button>
                                        <button class="btn-admin btn-admin-danger" onclick="deleteAnnouncement(<%= ann.id %>)" style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                            Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Announcement Modal -->
<div id="announcementModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modalTitle">Create Announcement</h3>
            <button class="modal-close" onclick="closeAnnouncementModal()">&times;</button>
        </div>
        <form id="announcementForm" class="admin-form" onsubmit="saveAnnouncement(event)">
            <input type="hidden" id="announcementId" name="id">
            
            <div class="form-group">
                <label>Title *</label>
                <input type="text" name="title" id="announcementTitle" class="form-control" required>
            </div>
            
            <div class="form-group">
                <label>Content *</label>
                <textarea name="content" id="announcementContent" class="form-control" rows="4" required></textarea>
            </div>
            
            <div class="form-group">
                <label>Type *</label>
                <select name="type" id="announcementType" class="form-control" required>
                    <option value="info">Info</option>
                    <option value="success">Success</option>
                    <option value="warning">Warning</option>
                    <option value="error">Error</option>
                </select>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Start Date</label>
                    <input type="datetime-local" name="start_date" id="announcementStartDate" class="form-control">
                </div>
                
                <div class="form-group">
                    <label>End Date</label>
                    <input type="datetime-local" name="end_date" id="announcementEndDate" class="form-control">
                </div>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" name="is_active" id="announcementActive" value="true" checked>
                    Active
                </label>
            </div>
            
            <div class="btn-group">
                <button type="submit" class="btn-admin btn-admin-primary">Save Announcement</button>
                <button type="button" class="btn-admin btn-admin-secondary" onclick="closeAnnouncementModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<link rel="stylesheet" href="/css/admin.css">
<script>
function openAnnouncementModal() {
    document.getElementById('modalTitle').textContent = 'Create Announcement';
    document.getElementById('announcementForm').reset();
    document.getElementById('announcementId').value = '';
    document.getElementById('announcementModal').classList.add('active');
}

function closeAnnouncementModal() {
    document.getElementById('announcementModal').classList.remove('active');
}

function editAnnouncement(announcement) {
    document.getElementById('modalTitle').textContent = 'Edit Announcement';
    document.getElementById('announcementId').value = announcement.id;
    document.getElementById('announcementTitle').value = announcement.title;
    document.getElementById('announcementContent').value = announcement.content;
    document.getElementById('announcementType').value = announcement.type;
    
    if (announcement.start_date) {
        const startDate = new Date(announcement.start_date);
        document.getElementById('announcementStartDate').value = startDate.toISOString().slice(0, 16);
    }
    
    if (announcement.end_date) {
        const endDate = new Date(announcement.end_date);
        document.getElementById('announcementEndDate').value = endDate.toISOString().slice(0, 16);
    }
    
    document.getElementById('announcementActive').checked = announcement.is_active;
    document.getElementById('announcementModal').classList.add('active');
}

async function saveAnnouncement(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = {
        id: formData.get('id') || null,
        title: formData.get('title'),
        content: formData.get('content'),
        type: formData.get('type'),
        start_date: formData.get('start_date') || null,
        end_date: formData.get('end_date') || null,
        is_active: document.getElementById('announcementActive').checked
    };
    
    try {
        const response = await fetch('/admin/announcements', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Announcement saved successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error saving announcement: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error saving announcement: ' + err.message, 'error');
    }
}

async function deleteAnnouncement(id) {
    if (!confirm('Are you sure you want to delete this announcement?')) {
        return;
    }
    
    try {
        const response = await fetch(`/admin/announcements/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Announcement deleted successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error deleting announcement: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error deleting announcement: ' + err.message, 'error');
    }
}

// Add notification helper function if not present
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            if (notification.parentNode) {
                document.body.removeChild(notification);
            }
        }, 300);
    }, 3000);
}
</script>
