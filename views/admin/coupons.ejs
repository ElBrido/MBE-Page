<div class="admin-container">
    <div class="admin-header">
        <h1><i class="fas fa-tag"></i> Coupon Management</h1>
        <p>Create and manage discount coupons for your customers.</p>
        <button class="btn-admin btn-admin-primary" onclick="openCouponModal()">
            <i class="fas fa-plus"></i> Create New Coupon
        </button>
    </div>

    <div class="admin-section">
        <div class="table-responsive">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Code</th>
                        <th>Type</th>
                        <th>Value</th>
                        <th>Description</th>
                        <th>Valid Period</th>
                        <th>Usage</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (coupons.length === 0) { %>
                        <tr>
                            <td colspan="9" class="no-data">No coupons found</td>
                        </tr>
                    <% } else { %>
                        <% coupons.forEach(coupon => { %>
                            <tr>
                                <td>#<%= coupon.id %></td>
                                <td><strong><%= coupon.code %></strong></td>
                                <td><%= coupon.type === 'percentage' ? 'Percentage' : 'Fixed Amount' %></td>
                                <td>
                                    <% if (coupon.type === 'percentage') { %>
                                        <%= coupon.value %>%
                                    <% } else { %>
                                        $<%= parseFloat(coupon.value).toFixed(2) %>
                                    <% } %>
                                </td>
                                <td><%= coupon.description || 'N/A' %></td>
                                <td>
                                    <% if (coupon.start_date && coupon.end_date) { %>
                                        <%= new Date(coupon.start_date).toLocaleDateString() %> - <%= new Date(coupon.end_date).toLocaleDateString() %>
                                    <% } else if (coupon.start_date) { %>
                                        From <%= new Date(coupon.start_date).toLocaleDateString() %>
                                    <% } else if (coupon.end_date) { %>
                                        Until <%= new Date(coupon.end_date).toLocaleDateString() %>
                                    <% } else { %>
                                        No Expiry
                                    <% } %>
                                </td>
                                <td>
                                    <%= coupon.total_usage || 0 %>
                                    <% if (coupon.usage_limit) { %>
                                        / <%= coupon.usage_limit %>
                                    <% } %>
                                </td>
                                <td>
                                    <% if (coupon.is_active) { %>
                                        <span class="status-badge active">Active</span>
                                    <% } else { %>
                                        <span class="status-badge inactive">Inactive</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn-admin btn-admin-secondary" onclick='editCoupon(<%= JSON.stringify(coupon) %>)' style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                            Edit
                                        </button>
                                        <button class="btn-admin btn-admin-danger" onclick="deleteCoupon(<%= coupon.id %>)" style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                            Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Coupon Modal -->
<div id="couponModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modalTitle">Create New Coupon</h3>
            <button class="modal-close" onclick="closeCouponModal()">&times;</button>
        </div>
        <form id="couponForm" class="admin-form" onsubmit="saveCoupon(event)">
            <input type="hidden" id="couponId" name="id">
            
            <div class="form-group">
                <label>Coupon Code *</label>
                <input type="text" name="code" id="couponCode" class="form-control" required pattern="[A-Z0-9]+" title="Only uppercase letters and numbers" style="text-transform: uppercase;">
                <small>Use uppercase letters and numbers only (e.g., HALLOWEEN2024, SAVE50)</small>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Discount Type *</label>
                    <select name="type" id="couponType" class="form-control" required>
                        <option value="percentage">Percentage (%)</option>
                        <option value="fixed">Fixed Amount ($)</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>Discount Value *</label>
                    <input type="number" name="value" id="couponValue" class="form-control" min="0" step="0.01" required>
                </div>
            </div>
            
            <div class="form-group">
                <label>Description</label>
                <textarea name="description" id="couponDescription" class="form-control" rows="2" placeholder="e.g., Halloween special discount"></textarea>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Start Date</label>
                    <input type="datetime-local" name="start_date" id="couponStartDate" class="form-control">
                </div>
                
                <div class="form-group">
                    <label>End Date</label>
                    <input type="datetime-local" name="end_date" id="couponEndDate" class="form-control">
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Usage Limit</label>
                    <input type="number" name="usage_limit" id="couponUsageLimit" class="form-control" min="0" placeholder="Leave empty for unlimited">
                </div>
                
                <div class="form-group">
                    <label>Minimum Purchase ($)</label>
                    <input type="number" name="min_purchase" id="couponMinPurchase" class="form-control" min="0" step="0.01" value="0">
                </div>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" name="is_active" id="couponActive" value="true" checked>
                    Active
                </label>
            </div>
            
            <div class="btn-group">
                <button type="submit" class="btn-admin btn-admin-primary">Save Coupon</button>
                <button type="button" class="btn-admin btn-admin-secondary" onclick="closeCouponModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<link rel="stylesheet" href="/css/admin.css">
<script>
function openCouponModal() {
    document.getElementById('modalTitle').textContent = 'Create New Coupon';
    document.getElementById('couponForm').reset();
    document.getElementById('couponId').value = '';
    document.getElementById('couponModal').classList.add('active');
}

function closeCouponModal() {
    document.getElementById('couponModal').classList.remove('active');
}

function editCoupon(coupon) {
    document.getElementById('modalTitle').textContent = 'Edit Coupon';
    document.getElementById('couponId').value = coupon.id;
    document.getElementById('couponCode').value = coupon.code;
    document.getElementById('couponType').value = coupon.type;
    document.getElementById('couponValue').value = coupon.value;
    document.getElementById('couponDescription').value = coupon.description || '';
    
    if (coupon.start_date) {
        const startDate = new Date(coupon.start_date);
        document.getElementById('couponStartDate').value = startDate.toISOString().slice(0, 16);
    }
    
    if (coupon.end_date) {
        const endDate = new Date(coupon.end_date);
        document.getElementById('couponEndDate').value = endDate.toISOString().slice(0, 16);
    }
    
    document.getElementById('couponUsageLimit').value = coupon.usage_limit || '';
    document.getElementById('couponMinPurchase').value = coupon.min_purchase || 0;
    document.getElementById('couponActive').checked = coupon.is_active;
    document.getElementById('couponModal').classList.add('active');
}

async function saveCoupon(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = {
        id: formData.get('id') || null,
        code: formData.get('code').toUpperCase(),
        type: formData.get('type'),
        value: parseFloat(formData.get('value')),
        description: formData.get('description'),
        start_date: formData.get('start_date') || null,
        end_date: formData.get('end_date') || null,
        usage_limit: formData.get('usage_limit') ? parseInt(formData.get('usage_limit')) : null,
        min_purchase: parseFloat(formData.get('min_purchase')) || 0,
        is_active: document.getElementById('couponActive').checked
    };
    
    try {
        const response = await fetch('/admin/coupons', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Coupon saved successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error saving coupon: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error saving coupon: ' + err.message, 'error');
    }
}

async function deleteCoupon(id) {
    if (!confirm('Are you sure you want to delete this coupon? This action cannot be undone.')) {
        return;
    }
    
    try {
        const response = await fetch(`/admin/coupons/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Coupon deleted successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error deleting coupon: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error deleting coupon: ' + err.message, 'error');
    }
}

// Auto-convert code to uppercase
document.addEventListener('DOMContentLoaded', function() {
    const couponCodeInput = document.getElementById('couponCode');
    if (couponCodeInput) {
        couponCodeInput.addEventListener('input', function() {
            this.value = this.value.toUpperCase();
        });
    }
});

// Add notification helper function if not present
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            if (notification.parentNode) {
                document.body.removeChild(notification);
            }
        }, 300);
    }, 3000);
}
</script>
