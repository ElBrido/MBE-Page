<div class="admin-container">
    <div class="admin-header">
        <h1><i class="fas fa-box"></i> Plan Management</h1>
        <p>Create and manage hosting plans.</p>
        <button class="btn-admin btn-admin-primary" onclick="openPlanModal()">
            <i class="fas fa-plus"></i> Create New Plan
        </button>
    </div>

    <div class="admin-section">
        <div class="table-responsive">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>CPU</th>
                        <th>RAM (MB)</th>
                        <th>Disk (GB)</th>
                        <th>DBs</th>
                        <th>Backups</th>
                        <th>Price</th>
                        <th>Orders</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (plans.length === 0) { %>
                        <tr>
                            <td colspan="11" class="no-data">No plans found</td>
                        </tr>
                    <% } else { %>
                        <% plans.forEach(plan => { %>
                            <tr>
                                <td>#<%= plan.id %></td>
                                <td><strong><%= plan.name %></strong></td>
                                <td><%= plan.cpu %></td>
                                <td><%= plan.ram %></td>
                                <td><%= plan.disk %></td>
                                <td><%= plan.databases %></td>
                                <td><%= plan.backups %></td>
                                <td>$<%= parseFloat(plan.price_monthly).toFixed(2) %>/mo</td>
                                <td><%= plan.order_count %></td>
                                <td>
                                    <% if (plan.is_active) { %>
                                        <span class="status-badge active">Active</span>
                                    <% } else { %>
                                        <span class="status-badge inactive">Inactive</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn-admin btn-admin-secondary" onclick='editPlan(<%= JSON.stringify(plan) %>)' style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                            Edit
                                        </button>
                                        <% if (!plan.is_custom) { %>
                                            <button class="btn-admin btn-admin-danger" onclick="deletePlan(<%= plan.id %>)" style="padding: 0.5rem 1rem; font-size: 0.85rem;">
                                                Delete
                                            </button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Plan Modal -->
<div id="planModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 id="modalTitle">Create New Plan</h3>
            <button class="modal-close" onclick="closePlanModal()">&times;</button>
        </div>
        <form id="planForm" class="admin-form" onsubmit="savePlan(event)">
            <input type="hidden" id="planId" name="id">
            
            <div class="form-group">
                <label>Plan Name *</label>
                <input type="text" name="name" id="planName" class="form-control" required>
            </div>
            
            <div class="form-group">
                <label>Description</label>
                <textarea name="description" id="planDescription" class="form-control" rows="3"></textarea>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>CPU Cores *</label>
                    <input type="number" name="cpu" id="planCpu" class="form-control" min="1" required>
                </div>
                
                <div class="form-group">
                    <label>RAM (MB) *</label>
                    <input type="number" name="ram" id="planRam" class="form-control" min="512" step="512" required>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Disk (GB) *</label>
                    <input type="number" name="disk" id="planDisk" class="form-control" min="10" step="10" required>
                </div>
                
                <div class="form-group">
                    <label>Databases *</label>
                    <input type="number" name="databases" id="planDatabases" class="form-control" min="0" required>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label>Backups *</label>
                    <input type="number" name="backups" id="planBackups" class="form-control" min="0" required>
                </div>
                
                <div class="form-group">
                    <label>Price (Monthly) *</label>
                    <input type="number" name="price_monthly" id="planPrice" class="form-control" min="0" step="0.01" required>
                </div>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" name="is_active" id="planActive" value="true" checked>
                    Active
                </label>
            </div>
            
            <div class="btn-group">
                <button type="submit" class="btn-admin btn-admin-primary">Save Plan</button>
                <button type="button" class="btn-admin btn-admin-secondary" onclick="closePlanModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<link rel="stylesheet" href="/css/admin.css">
<script>
function openPlanModal() {
    document.getElementById('modalTitle').textContent = 'Create New Plan';
    document.getElementById('planForm').reset();
    document.getElementById('planId').value = '';
    document.getElementById('planModal').classList.add('active');
}

function closePlanModal() {
    document.getElementById('planModal').classList.remove('active');
}

function editPlan(plan) {
    document.getElementById('modalTitle').textContent = 'Edit Plan';
    document.getElementById('planId').value = plan.id;
    document.getElementById('planName').value = plan.name;
    document.getElementById('planDescription').value = plan.description || '';
    document.getElementById('planCpu').value = plan.cpu;
    document.getElementById('planRam').value = plan.ram;
    document.getElementById('planDisk').value = plan.disk;
    document.getElementById('planDatabases').value = plan.databases;
    document.getElementById('planBackups').value = plan.backups;
    document.getElementById('planPrice').value = plan.price_monthly;
    document.getElementById('planActive').checked = plan.is_active;
    document.getElementById('planModal').classList.add('active');
}

async function savePlan(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = {
        id: formData.get('id') || null,
        name: formData.get('name'),
        description: formData.get('description'),
        cpu: parseInt(formData.get('cpu')),
        ram: parseInt(formData.get('ram')),
        disk: parseInt(formData.get('disk')),
        databases: parseInt(formData.get('databases')),
        backups: parseInt(formData.get('backups')),
        price_monthly: parseFloat(formData.get('price_monthly')),
        is_active: document.getElementById('planActive').checked
    };
    
    try {
        const response = await fetch('/admin/plans', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Plan saved successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error saving plan: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error saving plan: ' + err.message, 'error');
    }
}

// Add notification helper function if not present
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            if (notification.parentNode) {
                document.body.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

async function deletePlan(id) {
    if (!confirm('Are you sure you want to delete this plan? This action cannot be undone.')) {
        return;
    }
    
    try {
        const response = await fetch(`/admin/plans/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });
        
        const result = await response.json();
        if (result.success) {
            showNotification('Plan deleted successfully!', 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showNotification('Error deleting plan: ' + result.error, 'error');
        }
    } catch (err) {
        showNotification('Error deleting plan: ' + err.message, 'error');
    }
}
</script>
